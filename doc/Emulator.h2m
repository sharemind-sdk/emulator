/Runs the bytecode specified by/

The arguments to the bytecode process are passed through an argument stream,
which is constructed using command line options and/or read from standard input
(when using the --stdin flag). The results published by the bytecode process are
written to standard output, unless an --outFile= option is given to write the
results to the given file.

[Example]

To run a bytecode process without any arguments and discard the output, one may
use:

    Emulator --conf=/path/to/emulator.conf /path/to/bytecode \\
             --outFile=/dev/null --forceOutFile

To pass the first argument named "arg1" of protection domain "pd_a3p" and type
"uint64" with a value of 42 to the emulator, one may use

    Emulator --conf=/path/to/emulator.conf /path/to/bytecode \\
             --str=arg1 --str=pd_a3p --str=uint64 --size=8 --uint64=42

[Argument stream protocol]
The argument stream is a unidirectional binary stream for the delivery of
arguments (and results) into (or out of) the bytecode process.

The simple protocol can be described in pseudo-C packed structures as follows:

  struct Argument {
    uint64_t argumentNameSize;
    char     argumentName[argumentNameSize];
    uint64_t protectionDomainNameSize;
    char     protectionDomainName[protectionDomainNameSize];
    uint64_t typeNameSize;
    char     typeName[typeNameSize];
    uint64_t argumentDataSize;
    char     argumentData[argumentDataSize];
  } arguments[num_arguments];

Little-endian (network order) is assumed for multi-byte integral values.
